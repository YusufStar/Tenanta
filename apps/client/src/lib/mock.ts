// Mock data for Tenanta Dashboard

// Tenant Statistics
export const mockTenantStats = {
  totalTenants: 1247,
  activeTenants: 1189,
  totalSchemas: 3421,
  activeConnections: 567,
  growthRate: 12.5,
};

// Database Activity Data (30 days)
export const mockDatabaseActivityData = [
  { date: '2024-01-01', queries: 1250, connections: 45, transactions: 890 },
  { date: '2024-01-02', queries: 1380, connections: 52, transactions: 920 },
  { date: '2024-01-03', queries: 1420, connections: 48, transactions: 950 },
  { date: '2024-01-04', queries: 1350, connections: 55, transactions: 880 },
  { date: '2024-01-05', queries: 1580, connections: 62, transactions: 1020 },
  { date: '2024-01-06', queries: 1620, connections: 58, transactions: 1080 },
  { date: '2024-01-07', queries: 1450, connections: 51, transactions: 920 },
  { date: '2024-01-08', queries: 1720, connections: 65, transactions: 1150 },
  { date: '2024-01-09', queries: 1680, connections: 61, transactions: 1120 },
  { date: '2024-01-10', queries: 1850, connections: 68, transactions: 1250 },
  { date: '2024-01-11', queries: 1920, connections: 72, transactions: 1320 },
  { date: '2024-01-12', queries: 1780, connections: 66, transactions: 1180 },
  { date: '2024-01-13', queries: 1950, connections: 75, transactions: 1350 },
  { date: '2024-01-14', queries: 1820, connections: 69, transactions: 1220 },
  { date: '2024-01-15', queries: 2080, connections: 78, transactions: 1450 },
  { date: '2024-01-16', queries: 2150, connections: 82, transactions: 1520 },
  { date: '2024-01-17', queries: 1980, connections: 74, transactions: 1380 },
  { date: '2024-01-18', queries: 2250, connections: 85, transactions: 1620 },
  { date: '2024-01-19', queries: 2320, connections: 88, transactions: 1680 },
  { date: '2024-01-20', queries: 2180, connections: 81, transactions: 1550 },
  { date: '2024-01-21', queries: 2450, connections: 92, transactions: 1780 },
  { date: '2024-01-22', queries: 2520, connections: 95, transactions: 1850 },
  { date: '2024-01-23', queries: 2380, connections: 89, transactions: 1720 },
  { date: '2024-01-24', queries: 2650, connections: 98, transactions: 1920 },
  { date: '2024-01-25', queries: 2720, connections: 102, transactions: 1980 },
  { date: '2024-01-26', queries: 2580, connections: 96, transactions: 1850 },
  { date: '2024-01-27', queries: 2850, connections: 105, transactions: 2080 },
  { date: '2024-01-28', queries: 2920, connections: 108, transactions: 2150 },
  { date: '2024-01-29', queries: 2780, connections: 102, transactions: 2020 },
  { date: '2024-01-30', queries: 3050, connections: 112, transactions: 2250 },
];

// System Health Metrics
export const mockSystemMetrics = [
  {
    name: 'CPU Usage',
    value: 45,
    max: 100,
    unit: '%',
    iconName: 'Cpu' as const,
    color: 'text-blue-600',
    status: 'healthy' as const,
    description: 'Processor utilization across all cores',
  },
  {
    name: 'Memory Usage',
    value: 72,
    max: 100,
    unit: '%',
    iconName: 'MemoryStick' as const,
    color: 'text-green-600',
    status: 'warning' as const,
    description: 'RAM consumption and availability',
  },
  {
    name: 'Disk Usage',
    value: 58,
    max: 100,
    unit: '%',
    iconName: 'HardDrive' as const,
    color: 'text-purple-600',
    status: 'healthy' as const,
    description: 'Storage space utilization',
  },
  {
    name: 'Network I/O',
    value: 85,
    max: 100,
    unit: '%',
    iconName: 'Network' as const,
    color: 'text-indigo-600',
    status: 'warning' as const,
    description: 'Network bandwidth utilization',
  },
  {
    name: 'Server Load',
    value: 38,
    max: 100,
    unit: '%',
    iconName: 'Server' as const,
    color: 'text-cyan-600',
    status: 'healthy' as const,
    description: 'System load average',
  },
  {
    name: 'Active Queries',
    value: 67,
    max: 100,
    unit: '',
    iconName: 'Activity' as const,
    color: 'text-pink-600',
    status: 'healthy' as const,
    description: 'Concurrent database queries',
  },
  {
    name: 'Database Connections',
    value: 112,
    max: 150,
    unit: '',
    iconName: 'Database' as const,
    color: 'text-orange-600',
    status: 'healthy' as const,
    description: 'Active PostgreSQL connections',
  },
  {
    name: 'Cache Hit Rate',
    value: 92,
    max: 100,
    unit: '%',
    iconName: 'Zap' as const,
    color: 'text-yellow-600',
    status: 'healthy' as const,
    description: 'Redis cache performance',
  },
];

// System Logs Data
export const mockLogData = [
  {
    id: '1',
    timestamp: new Date(Date.now() - 2 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Database connection pool initialized with 20 connections',
    source: 'Database',
  },
  {
    id: '2',
    timestamp: new Date(Date.now() - 5 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "TechCorp Solutions" successfully created',
    source: 'TenantManager',
  },
  {
    id: '3',
    timestamp: new Date(Date.now() - 8 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Schema validation completed for ecommerce template',
    source: 'SchemaValidator',
  },
  {
    id: '4',
    timestamp: new Date(Date.now() - 12 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'High memory usage detected: 78% of available RAM',
    source: 'SystemMonitor',
  },
  {
    id: '5',
    timestamp: new Date(Date.now() - 15 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Redis cache warmed up successfully',
    source: 'CacheManager',
  },
  {
    id: '6',
    timestamp: new Date(Date.now() - 18 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: GET /api/v1/tenants (200ms)',
    source: 'APIGateway',
  },
  {
    id: '7',
    timestamp: new Date(Date.now() - 22 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Database query timeout: SELECT * FROM large_table (30s)',
    source: 'QueryExecutor',
  },
  {
    id: '8',
    timestamp: new Date(Date.now() - 25 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Backup job started: daily_full_backup',
    source: 'BackupService',
  },
  {
    id: '9',
    timestamp: new Date(Date.now() - 28 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Schema migration completed: v2.1.0 to v2.1.1',
    source: 'MigrationEngine',
  },
  {
    id: '10',
    timestamp: new Date(Date.now() - 32 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Connection pool utilization: 85% (17/20 connections)',
    source: 'ConnectionPool',
  },
  {
    id: '11',
    timestamp: new Date(Date.now() - 35 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User authentication: admin@tenanta.com (success)',
    source: 'AuthService',
  },
  {
    id: '12',
    timestamp: new Date(Date.now() - 38 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Failed to connect to Redis server: Connection refused',
    source: 'RedisClient',
  },
  {
    id: '13',
    timestamp: new Date(Date.now() - 42 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Data import completed: 15,000 records in 2.3s',
    source: 'DataImporter',
  },
  {
    id: '14',
    timestamp: new Date(Date.now() - 45 * 1000).toISOString(),
    level: 'success' as const,
    message: 'SSL certificate renewed successfully',
    source: 'SecurityManager',
  },
  {
    id: '15',
    timestamp: new Date(Date.now() - 48 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Slow query detected: avg response time 3.2s',
    source: 'QueryMonitor',
  },
  {
    id: '16',
    timestamp: new Date(Date.now() - 52 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Health check completed: all services operational',
    source: 'HealthChecker',
  },
  {
    id: '17',
    timestamp: new Date(Date.now() - 55 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Disk space warning: 92% of /var/log used',
    source: 'DiskMonitor',
  },
  {
    id: '18',
    timestamp: new Date(Date.now() - 58 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "ShopDirect" schema deployed successfully',
    source: 'SchemaDeployer',
  },
  {
    id: '19',
    timestamp: new Date(Date.now() - 62 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API rate limit exceeded for IP 192.168.1.100',
    source: 'RateLimiter',
  },
  {
    id: '20',
    timestamp: new Date(Date.now() - 65 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'CPU usage spike detected: 89% for 5 minutes',
    source: 'SystemMonitor',
  },
  {
    id: '21',
    timestamp: new Date(Date.now() - 68 * 1000).toISOString(),
    level: 'info' as const,
    message: 'WebSocket connection established: client_id=ws_12345',
    source: 'WebSocketManager',
  },
  {
    id: '22',
    timestamp: new Date(Date.now() - 71 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "DataAnalytics Inc" schema validated successfully',
    source: 'SchemaValidator',
  },
  {
    id: '23',
    timestamp: new Date(Date.now() - 74 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: POST /api/v1/schemas (150ms)',
    source: 'APIGateway',
  },
  {
    id: '24',
    timestamp: new Date(Date.now() - 77 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Network latency increased: avg 45ms (threshold: 30ms)',
    source: 'NetworkMonitor',
  },
  {
    id: '25',
    timestamp: new Date(Date.now() - 80 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User session created: user_id=admin, tenant_id=techcorp',
    source: 'SessionManager',
  },
  {
    id: '26',
    timestamp: new Date(Date.now() - 83 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Database deadlock detected: transaction_id=tx_789',
    source: 'Database',
  },
  {
    id: '27',
    timestamp: new Date(Date.now() - 86 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Backup verification completed: checksum validated',
    source: 'BackupService',
  },
  {
    id: '28',
    timestamp: new Date(Date.now() - 89 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Cache miss rate: 12% (acceptable threshold: 15%)',
    source: 'CacheManager',
  },
  {
    id: '29',
    timestamp: new Date(Date.now() - 92 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'High CPU usage on worker node: worker-2 (95%)',
    source: 'ClusterMonitor',
  },
  {
    id: '30',
    timestamp: new Date(Date.now() - 95 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: GET /api/v1/data/analytics (320ms)',
    source: 'APIGateway',
  },
  {
    id: '31',
    timestamp: new Date(Date.now() - 98 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "CloudTech Solutions" backup completed',
    source: 'BackupService',
  },
  {
    id: '32',
    timestamp: new Date(Date.now() - 101 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Database index optimization completed: 15 indexes analyzed',
    source: 'DatabaseOptimizer',
  },
  {
    id: '33',
    timestamp: new Date(Date.now() - 104 * 1000).toISOString(),
    level: 'error' as const,
    message: 'SSL handshake failed: client certificate expired',
    source: 'SecurityManager',
  },
  {
    id: '34',
    timestamp: new Date(Date.now() - 107 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Memory fragmentation detected: 23% fragmented',
    source: 'MemoryManager',
  },
  {
    id: '35',
    timestamp: new Date(Date.now() - 110 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User logout: admin@tenanta.com, session_duration=45m',
    source: 'AuthService',
  },
  {
    id: '36',
    timestamp: new Date(Date.now() - 113 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Schema migration rollback completed: v2.1.1 to v2.1.0',
    source: 'MigrationEngine',
  },
  {
    id: '37',
    timestamp: new Date(Date.now() - 116 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API rate limit reset: IP 192.168.1.100',
    source: 'RateLimiter',
  },
  {
    id: '38',
    timestamp: new Date(Date.now() - 119 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Database connection leak detected: 3 orphaned connections',
    source: 'ConnectionPool',
  },
  {
    id: '39',
    timestamp: new Date(Date.now() - 122 * 1000).toISOString(),
    level: 'info' as const,
    message: 'WebSocket message broadcast: 1,247 active connections',
    source: 'WebSocketManager',
  },
  {
    id: '40',
    timestamp: new Date(Date.now() - 125 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "BusinessInsights" data export completed',
    source: 'DataExporter',
  },
  {
    id: '41',
    timestamp: new Date(Date.now() - 128 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: PUT /api/v1/tenants/techcorp (180ms)',
    source: 'APIGateway',
  },
  {
    id: '42',
    timestamp: new Date(Date.now() - 131 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Redis memory limit exceeded: 512MB used of 500MB',
    source: 'RedisClient',
  },
  {
    id: '43',
    timestamp: new Date(Date.now() - 134 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Slow disk I/O detected: avg response time 150ms',
    source: 'DiskMonitor',
  },
  {
    id: '44',
    timestamp: new Date(Date.now() - 137 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User permission updated: role=admin, tenant=techcorp',
    source: 'PermissionManager',
  },
  {
    id: '45',
    timestamp: new Date(Date.now() - 140 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Database vacuum completed: freed 2.3GB space',
    source: 'DatabaseOptimizer',
  },
  {
    id: '46',
    timestamp: new Date(Date.now() - 143 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: DELETE /api/v1/schemas/old_schema (90ms)',
    source: 'APIGateway',
  },
  {
    id: '47',
    timestamp: new Date(Date.now() - 146 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'High network bandwidth usage: 85Mbps (limit: 100Mbps)',
    source: 'NetworkMonitor',
  },
  {
    id: '48',
    timestamp: new Date(Date.now() - 149 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Cache eviction triggered: 1,000 keys removed',
    source: 'CacheManager',
  },
  {
    id: '49',
    timestamp: new Date(Date.now() - 152 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "EcommerceStore" schema backup verified',
    source: 'BackupService',
  },
  {
    id: '50',
    timestamp: new Date(Date.now() - 155 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: GET /api/v1/health (15ms)',
    source: 'APIGateway',
  },
  {
    id: '51',
    timestamp: new Date(Date.now() - 158 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Database constraint violation: foreign_key_check failed',
    source: 'Database',
  },
  {
    id: '52',
    timestamp: new Date(Date.now() - 161 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Memory pressure detected: swapping to disk',
    source: 'SystemMonitor',
  },
  {
    id: '53',
    timestamp: new Date(Date.now() - 164 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User session timeout: user_id=guest, duration=30m',
    source: 'SessionManager',
  },
  {
    id: '54',
    timestamp: new Date(Date.now() - 167 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Schema validation passed: 25 tables, 150 constraints',
    source: 'SchemaValidator',
  },
  {
    id: '55',
    timestamp: new Date(Date.now() - 170 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: POST /api/v1/data/import (2.1s)',
    source: 'APIGateway',
  },
  {
    id: '56',
    timestamp: new Date(Date.now() - 173 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Connection pool timeout: 5 connections waiting',
    source: 'ConnectionPool',
  },
  {
    id: '57',
    timestamp: new Date(Date.now() - 176 * 1000).toISOString(),
    level: 'info' as const,
    message: 'WebSocket heartbeat: 1,156 connections alive',
    source: 'WebSocketManager',
  },
  {
    id: '58',
    timestamp: new Date(Date.now() - 179 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "ReportingSuite" data sync completed',
    source: 'DataSync',
  },
  {
    id: '59',
    timestamp: new Date(Date.now() - 182 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: GET /api/v1/metrics (45ms)',
    source: 'APIGateway',
  },
  {
    id: '60',
    timestamp: new Date(Date.now() - 185 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Database corruption detected: table users_corrupted',
    source: 'DatabaseIntegrity',
  },
  {
    id: '61',
    timestamp: new Date(Date.now() - 188 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'High disk I/O queue: 25 pending operations',
    source: 'DiskMonitor',
  },
  {
    id: '62',
    timestamp: new Date(Date.now() - 191 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User login attempt: user=analyst, IP=10.0.1.50',
    source: 'AuthService',
  },
  {
    id: '63',
    timestamp: new Date(Date.now() - 194 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Schema migration completed: v2.1.1 to v2.1.2',
    source: 'MigrationEngine',
  },
  {
    id: '64',
    timestamp: new Date(Date.now() - 197 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: PUT /api/v1/schemas/analytics (280ms)',
    source: 'APIGateway',
  },
  {
    id: '65',
    timestamp: new Date(Date.now() - 200 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Cache memory pressure: 85% of allocated memory used',
    source: 'CacheManager',
  },
  {
    id: '66',
    timestamp: new Date(Date.now() - 203 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Database statistics updated: 1,247 tables analyzed',
    source: 'DatabaseOptimizer',
  },
  {
    id: '67',
    timestamp: new Date(Date.now() - 206 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "WarehousePro" backup verification passed',
    source: 'BackupService',
  },
  {
    id: '68',
    timestamp: new Date(Date.now() - 209 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: DELETE /api/v1/tenants/inactive (120ms)',
    source: 'APIGateway',
  },
  {
    id: '69',
    timestamp: new Date(Date.now() - 212 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Network packet loss: 2.3% (threshold: 1%)',
    source: 'NetworkMonitor',
  },
  {
    id: '70',
    timestamp: new Date(Date.now() - 215 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'High memory allocation: 1.2GB allocated in 5 minutes',
    source: 'MemoryManager',
  },
  {
    id: '71',
    timestamp: new Date(Date.now() - 218 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User session extended: user_id=admin, new_expiry=+2h',
    source: 'SessionManager',
  },
  {
    id: '72',
    timestamp: new Date(Date.now() - 221 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Schema validation completed: 100% test coverage',
    source: 'SchemaValidator',
  },
  {
    id: '73',
    timestamp: new Date(Date.now() - 224 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: GET /api/v1/logs (75ms)',
    source: 'APIGateway',
  },
  {
    id: '74',
    timestamp: new Date(Date.now() - 227 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Database lock contention: 8 queries waiting',
    source: 'Database',
  },
  {
    id: '75',
    timestamp: new Date(Date.now() - 230 * 1000).toISOString(),
    level: 'info' as const,
    message: 'WebSocket reconnection: client_id=ws_67890',
    source: 'WebSocketManager',
  },
  {
    id: '76',
    timestamp: new Date(Date.now() - 233 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "MobileApp Dev" data migration completed',
    source: 'DataMigration',
  },
  {
    id: '77',
    timestamp: new Date(Date.now() - 236 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: POST /api/v1/webhooks (95ms)',
    source: 'APIGateway',
  },
  {
    id: '78',
    timestamp: new Date(Date.now() - 239 * 1000).toISOString(),
    level: 'error' as const,
    message: 'SSL certificate validation failed: expired certificate',
    source: 'SecurityManager',
  },
  {
    id: '79',
    timestamp: new Date(Date.now() - 242 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'High CPU temperature: 78°C (threshold: 75°C)',
    source: 'HardwareMonitor',
  },
  {
    id: '80',
    timestamp: new Date(Date.now() - 245 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User permission check: role=viewer, resource=logs',
    source: 'PermissionManager',
  },
  {
    id: '81',
    timestamp: new Date(Date.now() - 248 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Database index rebuild completed: 45 indexes optimized',
    source: 'DatabaseOptimizer',
  },
  {
    id: '82',
    timestamp: new Date(Date.now() - 251 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: GET /api/v1/status (25ms)',
    source: 'APIGateway',
  },
  {
    id: '83',
    timestamp: new Date(Date.now() - 254 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Connection pool fragmentation: 12% unused connections',
    source: 'ConnectionPool',
  },
  {
    id: '84',
    timestamp: new Date(Date.now() - 257 * 1000).toISOString(),
    level: 'info' as const,
    message: 'Cache hit rate improved: 94% (previous: 89%)',
    source: 'CacheManager',
  },
  {
    id: '85',
    timestamp: new Date(Date.now() - 260 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "CloudTech Solutions" schema updated',
    source: 'SchemaDeployer',
  },
  {
    id: '86',
    timestamp: new Date(Date.now() - 263 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: PUT /api/v1/config (180ms)',
    source: 'APIGateway',
  },
  {
    id: '87',
    timestamp: new Date(Date.now() - 266 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Database connection timeout: pool exhausted',
    source: 'Database',
  },
  {
    id: '88',
    timestamp: new Date(Date.now() - 269 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Memory allocation failed: insufficient heap space',
    source: 'MemoryManager',
  },
  {
    id: '89',
    timestamp: new Date(Date.now() - 272 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User activity logged: admin performed bulk operation',
    source: 'ActivityLogger',
  },
  {
    id: '90',
    timestamp: new Date(Date.now() - 275 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Backup compression completed: 45% size reduction',
    source: 'BackupService',
  },
  {
    id: '91',
    timestamp: new Date(Date.now() - 278 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: GET /api/v1/analytics (420ms)',
    source: 'APIGateway',
  },
  {
    id: '92',
    timestamp: new Date(Date.now() - 281 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'Network bandwidth throttling: rate limit applied',
    source: 'NetworkMonitor',
  },
  {
    id: '93',
    timestamp: new Date(Date.now() - 284 * 1000).toISOString(),
    level: 'info' as const,
    message: 'WebSocket message queued: 150 pending messages',
    source: 'WebSocketManager',
  },
  {
    id: '94',
    timestamp: new Date(Date.now() - 287 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Tenant "DataAnalytics Inc" data validation passed',
    source: 'DataValidator',
  },
  {
    id: '95',
    timestamp: new Date(Date.now() - 290 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: POST /api/v1/notifications (85ms)',
    source: 'APIGateway',
  },
  {
    id: '96',
    timestamp: new Date(Date.now() - 293 * 1000).toISOString(),
    level: 'error' as const,
    message: 'Database deadlock resolution: transaction rolled back',
    source: 'Database',
  },
  {
    id: '97',
    timestamp: new Date(Date.now() - 296 * 1000).toISOString(),
    level: 'warning' as const,
    message: 'High disk space usage: 89% of /data partition',
    source: 'DiskMonitor',
  },
  {
    id: '98',
    timestamp: new Date(Date.now() - 299 * 1000).toISOString(),
    level: 'info' as const,
    message: 'User session cleanup: 15 expired sessions removed',
    source: 'SessionManager',
  },
  {
    id: '99',
    timestamp: new Date(Date.now() - 302 * 1000).toISOString(),
    level: 'success' as const,
    message: 'Schema migration verification: all constraints valid',
    source: 'MigrationEngine',
  },
  {
    id: '100',
    timestamp: new Date(Date.now() - 305 * 1000).toISOString(),
    level: 'info' as const,
    message: 'API request processed: GET /api/v1/health (12ms)',
    source: 'APIGateway',
  },
];
